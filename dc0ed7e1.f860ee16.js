(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{118:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(7),i=(a(0),a(128)),o={id:"guide-graphdb",title:"Setting up GraphDB"},l={unversionedId:"guide-graphdb",id:"guide-graphdb",isDocsHomePage:!1,title:"Setting up GraphDB",description:"Ontotext GraphDB triplestore is available on DockerHub for standard and enterprise edition.",source:"@site/docs/guide-graphdb.md",slug:"/guide-graphdb",permalink:"/docs/guide-graphdb",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/guide-graphdb.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1610636440,sidebar:"docs",previous:{title:"Experimental Jenkins workflows",permalink:"/docs/guide-jenkins"},next:{title:"Setting up Virtuoso",permalink:"/docs/guide-virtuoso"}},c=[{value:"Run it",id:"run-it",children:[{value:"Using the client",id:"using-the-client",children:[]},{value:"Docker build and run",id:"docker-build-and-run",children:[]},{value:"Permission issues",id:"permission-issues",children:[]},{value:"Configure GraphDB",id:"configure-graphdb",children:[]}]},{value:"Preload a file",id:"preload-a-file",children:[]},{value:"Create repository",id:"create-repository",children:[{value:"Using cURL",id:"using-curl",children:[]},{value:"Using the GUI",id:"using-the-gui",children:[]}]},{value:"Manage user",id:"manage-user",children:[]},{value:"Create Search Index",id:"create-search-index",children:[]},{value:"Query inferred statements",id:"query-inferred-statements",children:[]},{value:"Use the HTTP API",id:"use-the-http-api",children:[{value:"Import file",id:"import-file",children:[]},{value:"Import URL",id:"import-url",children:[]},{value:"Export graphs",id:"export-graphs",children:[]}]},{value:"Importing large files",id:"importing-large-files",children:[]}],p={toc:c};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://graphdb.ontotext.com/"}),"Ontotext GraphDB")," triplestore is available on ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://hub.docker.com/r/ontotext/graphdb/"}),"DockerHub")," for ",Object(i.b)("inlineCode",{parentName:"p"},"standard")," and ",Object(i.b)("inlineCode",{parentName:"p"},"enterprise edition"),"."),Object(i.b)("p",null,"If you wish to use GraphDB free edition, you will need to download it from Ontotext and build the Docker image."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Provide informations to get an email with the link to download GraphDB",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://ontotext.com/products/graphdb/"}),"https://ontotext.com/products/graphdb/")))),Object(i.b)("li",{parentName:"ul"},"Download GraphDB as stand-alone server free version (zip)"),Object(i.b)("li",{parentName:"ul"},"Put the downloaded ",Object(i.b)("inlineCode",{parentName:"li"},".zip")," file in the GraphDB repository (cloned from ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/graphdb/"}),"GitHub"),")."),Object(i.b)("li",{parentName:"ul"},"Run ",Object(i.b)("inlineCode",{parentName:"li"},"docker build -t graphdb --build-arg version=CHANGE_ME .")," in the GraphDB repository.")),Object(i.b)("h2",{id:"run-it"},"Run it"),Object(i.b)("h3",{id:"using-the-client"},"Using the client"),Object(i.b)("p",null,"You can provide the .zip file required to build GraphDB when doing ",Object(i.b)("inlineCode",{parentName:"p"},"d2s init"),", otherwise it needs to be placed in ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/tree/master/support"}),"d2s-core/support/graphdb")," before running the build."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Build\nd2s update graphdb\n\n# Run\nd2s start graphdb\n")),Object(i.b)("h3",{id:"docker-build-and-run"},"Docker build and run"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"# Here shared locally at /data/graphdb and /data/graphdb-import\ndocker build -t graphdb --build-arg version=9.1.1 .\n\ndocker run -d --rm --name graphdb -p 7200:7200 -v $(pwd)/workspace/graphdb:/opt/graphdb/home -v $(pwd)/workspaceimport:/root/graphdb-import graphdb\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Go to http://localhost:7200/")),Object(i.b)("h3",{id:"permission-issues"},"Permission issues"),Object(i.b)("p",null,"If you face permissions issues with importing files try the following command (it will ",Object(i.b)("inlineCode",{parentName:"p"},"chmod 777")," the import folder):"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s update --permissions\n")),Object(i.b)("h3",{id:"configure-graphdb"},"Configure GraphDB"),Object(i.b)("p",null,"The memory allocated to the Java Virtual Machine can be increase, especially if you are facing Heap Space error when working with big graphs. See ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://graphdb.ontotext.com/documentation/standard/requirements.html"}),"GraphDB documentation about recommended Java memory allocation"),"."),Object(i.b)("h2",{id:"preload-a-file"},"Preload a file"),Object(i.b)("p",null,"When datasets bigger than 5G statements use the preload  tool, which load faster in a stopped graphdb. To avoid stopping our main GraphDB instance we will preload using a temporary GraphDB, then copy the loaded repository in the running GraphDB"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Change the repository to be created and loaded in ",Object(i.b)("inlineCode",{parentName:"li"},"workspace/graphdb/preload-config.ttl")),Object(i.b)("li",{parentName:"ul"},"Put the files to be loaded in ",Object(i.b)("inlineCode",{parentName:"li"},"workspace/import/preload"))),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s start graphdb-preload\n")),Object(i.b)("p",null,"When the preload has completed, the ",Object(i.b)("inlineCode",{parentName:"p"},"graphdb-preload")," will stop, you can then copy the loaded repository to the running GraphDB folder:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"cp -r workspace/graphdb/preload-data/repositories/* workspace/graphdb/data/repositories/\n")),Object(i.b)("h2",{id:"create-repository"},"Create repository"),Object(i.b)("h3",{id:"using-curl"},"Using cURL"),Object(i.b)("p",null,"Create the ",Object(i.b)("inlineCode",{parentName:"p"},"test")," repository "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST \\\n    http://localhost:7200/rest/repositories \\\n    -H 'Content-Type: multipart/form-data' \\\n    -F \"config=@d2s-core/support/graphdb-test-repo-config.ttl\"\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"Edit the repository in ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/support/graphdb-test-repo-config.ttl"}),"graphdb-test-repo-config.ttl"),".")),Object(i.b)("h3",{id:"using-the-gui"},"Using the GUI"),Object(i.b)("p",null,"Go to ",Object(i.b)("strong",{parentName:"p"},"Setup")," > ",Object(i.b)("strong",{parentName:"p"},"Repositories")," > ",Object(i.b)("strong",{parentName:"p"},"Create new repository")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"Repository ID"),": ",Object(i.b)("inlineCode",{parentName:"li"},"test")," (or whatever you want it to be, but you will need to change the examples default config)"),Object(i.b)("li",{parentName:"ul"},"Check the box ",Object(i.b)("strong",{parentName:"li"},"Use context index")),Object(i.b)("li",{parentName:"ul"},"Click ",Object(i.b)("strong",{parentName:"li"},"Create"))),Object(i.b)("h2",{id:"manage-user"},"Manage user"),Object(i.b)("p",null,"\ud83d\udd13Default ",Object(i.b)("inlineCode",{parentName:"p"},"admin")," user password is ",Object(i.b)("inlineCode",{parentName:"p"},"root")),Object(i.b)("p",null,"Go to ",Object(i.b)("strong",{parentName:"p"},"Setup"),", then ",Object(i.b)("strong",{parentName:"p"},"Users and access")),Object(i.b)("p",null,"To change your password:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Click ",Object(i.b)("strong",{parentName:"li"},"Edit admin user")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("strong",{parentName:"li"},"Enter a new password")),Object(i.b)("li",{parentName:"ol"},"Click ",Object(i.b)("strong",{parentName:"li"},"Save"))),Object(i.b)("p",null,"By default security is not enabled, click on ",Object(i.b)("strong",{parentName:"p"},"Security is off")," to turn it on."),Object(i.b)("p",null,"To create a new user click ",Object(i.b)("strong",{parentName:"p"},"Create new user")),Object(i.b)("h2",{id:"create-search-index"},"Create Search Index"),Object(i.b)("p",null,"Execute this insert SPARQL query in the repository:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-SPARQL"}),'PREFIX luc: <http://www.ontotext.com/owlim/lucene#>\nINSERT DATA { \n    # luc:moleculeSize luc:setParam "1" .\n    luc:includePredicates luc:setParam "http://www.w3.org/2000/01/rdf-schema#label https://w3id.org/biolink/vocab/name http://w3id.org/biolink/vocab/name" .\n    luc:useRDFRank luc:setParam "yes" .\n    luc:searchIndex luc:createIndex "true" .\n}\n')),Object(i.b)("h2",{id:"query-inferred-statements"},"Query inferred statements"),Object(i.b)("p",null,"See the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"http://graphdb.ontotext.com/documentation/standard/query-behaviour.html#how-to-query-explicit-and-implicit-statements"}),"official Ontotext GraphDB documentation"),"."),Object(i.b)("h2",{id:"use-the-http-api"},"Use the HTTP API"),Object(i.b)("p",null,"See the ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://graphdb.dumontierlab.com/webapi"}),"Swagger UI"),"."),Object(i.b)("h3",{id:"import-file"},"Import file"),Object(i.b)("p",null,"Import the ",Object(i.b)("inlineCode",{parentName:"p"},"rdf_output.nq")," file (in server import)"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'curl -X POST -u admin:root --header \'Content-Type: application/json\' --header \'Accept: application/json\' -d \'{\n   "fileNames": [\n     "rdf_output.nq"\n   ],\n   "importSettings": {\n      "context": "https://w3id.org/d2s/graph"\n    }\n }\' \'http://localhost:7200/rest/data/import/server/$GRAPHDB_REPOSITORY\'\n')),Object(i.b)("p",null,"Check if import is done:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),'curl -X GET --header \'Accept: application/json\' \'http://localhost:7200/rest/data/import/server/test\'\n\n# Still importing:\n[\n  {\n    "name": "rdf_output.nq",\n    "status": "IMPORTING",\n    "message": ""\n  }\n]\n')),Object(i.b)("h3",{id:"import-url"},"Import URL"),Object(i.b)("p",null,"Does not seems to work."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"curl -X POST -u admin:root --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{\n   \"baseURI\": \"https://archive.monarchinitiative.org/latest/rdf/ctd.ttl\",\n   \"context\": :\n }' 'http://localhost:7200/rest/data/import/upload/test/url'\n")),Object(i.b)("blockquote",null,Object(i.b)("p",{parentName:"blockquote"},"e.g. ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"https://archive.monarchinitiative.org/latest/rdf/ctd.ttl"}),"https://archive.monarchinitiative.org/latest/rdf/ctd.ttl"))),Object(i.b)("h3",{id:"export-graphs"},"Export graphs"),Object(i.b)("p",null,"Export ",Object(i.b)("strong",{parentName:"p"},"all graphs")," of a repository to nquads:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"wget -O rdf_output.nq --header 'Accept: text/x-nquads' 'https://graphdb.dumontierlab.com/repositories/ncats-red-kg/statements'\n")),Object(i.b)("p",null,"Export ",Object(i.b)("strong",{parentName:"p"},"one graph")," to nquads:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"wget -O rdf_output.nq --header 'Accept: application/n-quads' 'https://graphdb.dumontierlab.com/repositories/ncats-red-kg/rdf-graphs/service?graph=https://w3id.org/data2services/graph/biolink/drugbank/datasets'\n")),Object(i.b)("h2",{id:"importing-large-files"},"Importing large files"),Object(i.b)("p",null,"Recommendations when dealing with large RDF files to import."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Speaking in general terms, JVM cannot handle big heaps well (>30GB)  due to highly expensive full GC cycles.")),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"If you load datasets larger than 4B RDF triples use 40-bit identifiers to enable more than 2B unique RDF resources "),Object(i.b)("li",{parentName:"ul"},"When datasets bigger than 500M statements without inference use the preload  tool, which guarantees a sustained speed of 500M triples per hour "),Object(i.b)("li",{parentName:"ul"},"Lower the heap to 30GB, the OS will cache some of the files so the big RAM will be still used to cache the files "),Object(i.b)("li",{parentName:"ul"},"Expect a substantial offheap index (check the ",Object(i.b)("a",Object(r.a)({parentName:"li"},{href:"http://graphdb.ontotext.com/documentation/standard/requirements.html"}),"off heap estimate in the GraphDB documentation"),") ")),Object(i.b)("p",null,"When creating the repo:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'owlim:entity-index-size "2000000000" ;')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},'owlim:entity-id-size  "40" ;'))))}b.isMDXComponent=!0},128:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return h}));var r=a(0),n=a.n(r);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=n.a.createContext({}),b=function(e){var t=n.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=b(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},u=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=b(a),u=r,h=s["".concat(o,".").concat(u)]||s[u]||d[u]||i;return a?n.a.createElement(h,l(l({ref:t},p),{},{components:a})):n.a.createElement(h,l({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.a.createElement.apply(null,o)}return n.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);