(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{120:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return d})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return c}));var n=a(3),r=a(7),o=(a(0),a(137)),i={id:"d2s-new-dataset",title:"Add a new dataset"},d={unversionedId:"d2s-new-dataset",id:"d2s-new-dataset",isDocsHomePage:!1,title:"Add a new dataset",description:"In this documentation I will use d2s-project-template as example, but you are encouraged to create a new Git repository using the template.",source:"@site/docs/d2s-new-dataset.md",slug:"/d2s-new-dataset",permalink:"/docs/d2s-new-dataset",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/d2s-new-dataset.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1610650952,sidebar:"docs",previous:{title:"Utilities",permalink:"/docs/services-utilities"},next:{title:"Run RML transformations",permalink:"/docs/d2s-rml"}},l=[{value:"Generate the new dataset",id:"generate-the-new-dataset",children:[{value:"Describe the dataset metadata",id:"describe-the-dataset-metadata",children:[]},{value:"Add files to download",id:"add-files-to-download",children:[]}]},{value:"Integrate data",id:"integrate-data",children:[]}],s={toc:l};function c(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"In this documentation I will use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template"}),"d2s-project-template")," as example, but you are encouraged to create a new Git repository ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/generate"}),"using the template"),"."),Object(o.b)("h2",{id:"generate-the-new-dataset"},"Generate the new dataset"),Object(o.b)("p",null,"The files required to transform the dataset will be generated in ",Object(o.b)("inlineCode",{parentName:"p"},"datasets/$dataset_id")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s generate dataset\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"You will be prompted to enter some metadata about the dataset to create.")),Object(o.b)("p",null,"The dataset mappings, metadata, notebook and download files are created in the ",Object(o.b)("inlineCode",{parentName:"p"},"dataset/$dataset_id")," folder."),Object(o.b)("p",null,"The dataset folder is generated based on ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/tree/master/support/template/dataset"}),"this template folder"),". Example mapping files are provided for DrugBank XML data and Columbia Open Health clinical Data TSV data."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/help"}),"Let us know")," if those examples are helpful, or if they would need to be more explicit.")),Object(o.b)("h3",{id:"describe-the-dataset-metadata"},"Describe the dataset metadata"),Object(o.b)("p",null,"You are encouraged to improve the metadata description of your dataset by editing the 2 metadata files generated in ",Object(o.b)("inlineCode",{parentName:"p"},"datasets/$dataset_id/metadata"),"."),Object(o.b)("p",null,"A dozen of metadata are defined using a SPARQL query for the summary of the dataset, and for each distribution."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"SPARQL insert dataset ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/support/template/dataset/metadata/metadata-template-0-summary.rq"}),"summary metadata")," (once by dataset)."),Object(o.b)("li",{parentName:"ul"},"SPARQL insert dataset ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/support/template/dataset/metadata/metadata-template-1.rq"}),"distribution metadata")," (for each new version).")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Change the URIs between ",Object(o.b)("inlineCode",{parentName:"p"},"<>")," and strings between ",Object(o.b)("inlineCode",{parentName:"p"},'""'),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"We recommend using ",Object(o.b)("inlineCode",{parentName:"p"},"Stardog RDF Grammars")," extension in Visual Studio Code to edit SPARQL queries (",Object(o.b)("inlineCode",{parentName:"p"},".rq")," files).")),Object(o.b)("h3",{id:"add-files-to-download"},"Add files to download"),Object(o.b)("p",null,"You can define the files to download using:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"a ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/download/download.sh"}),"Bash file"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"In ",Object(o.b)("inlineCode",{parentName:"li"},"datasets/$dataset_id/download/download.sh")),Object(o.b)("li",{parentName:"ul"},"Download with ",Object(o.b)("inlineCode",{parentName:"li"},"d2s download $dataset_id")))),Object(o.b)("li",{parentName:"ul"},"a ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/process-cohd.ipynb"}),"Jupyter Notebook"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"In ",Object(o.b)("inlineCode",{parentName:"li"},"datasets/$dataset_id/process-dataset_id.ipynb"))))),Object(o.b)("p",null,"The files will be downloaded in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/input/$dataset_id"),"."),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/support/template/dataset/download/download_examples.sh"}),"template")," is provided with examples to download, unzip or add column labels provided."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"d2s")," extract data from csv/tsv files based on their column label. If your tabular doesn't have column you can add them at the end of the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/support/template/dataset/download/download_examples.sh"}),"download.sh")," file by using the ",Object(o.b)("inlineCode",{parentName:"p"},"sed")," command.")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"integrate-data"},"Integrate data"),Object(o.b)("p",null,"Multiple solutions are available to integrate data in a standard Knowledge Graph:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/d2s-rml"}),"RML mappings")," (RDF Mapping Language)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://d2s.semanticscience.org/docs/d2s-run"}),"CWL workflows")," defined to convert structured files to RDF using SPARQL queries"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/d2s-biothings"}),"BioThings Studio")," to build BioThings APIs (exposed to the Translator using the ReasonerStd API)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/services-utilities#docket-multiomics-data-provider"}),"DOCKET")," to integrate omics data"),Object(o.b)("li",{parentName:"ul"},"Python scripts and notebooks",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"/docs/d2s-dipper"}),"Dipper ETL")))),Object(o.b)("li",{parentName:"ul"},"Define new CWL workflows to build and share your data transformation pipelines",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"See the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/tree/master/cwl"}),"CWL workflows defined for d2s"),".")))))}c.isMDXComponent=!0},137:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),c=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},b=function(e){var t=c(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=c(a),u=n,m=b["".concat(i,".").concat(u)]||b[u]||p[u]||o;return a?r.a.createElement(m,d(d({ref:t},s),{},{components:a})):r.a.createElement(m,d({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var d={};for(var l in t)hasOwnProperty.call(t,l)&&(d[l]=t[l]);d.originalType=e,d.mdxType="string"==typeof e?e:n,i[1]=d;for(var s=2;s<o;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);