(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{130:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),o=(a(0),a(137)),l={id:"d2s-rml",title:"Run RML transformations"},c={unversionedId:"d2s-rml",id:"d2s-rml",isDocsHomePage:!1,title:"Run RML transformations",description:"Use the RDF Mapping Language (RML) to map your structured data (CSV, TSV, SQL, XML, JSON, YAML) to RDF using a declarative mapping language.",source:"@site/docs/d2s-rml.md",slug:"/d2s-rml",permalink:"/docs/d2s-rml",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/d2s-rml.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1610982731,sidebar:"docs",previous:{title:"Add a new dataset",permalink:"/docs/d2s-new-dataset"},next:{title:"Run CWL workflows",permalink:"/docs/d2s-run"}},p=[{value:"Download files to convert",id:"download-files-to-convert",children:[]},{value:"Run RML Mapper",id:"run-rml-mapper",children:[]},{value:"Run RML Streamer",id:"run-rml-streamer",children:[{value:"Start Apache Flink",id:"start-apache-flink",children:[]},{value:"Run job",id:"run-job",children:[]},{value:"Run on OpenShift",id:"run-on-openshift",children:[]}]},{value:"Edit RML mappings",id:"edit-rml-mappings",children:[{value:"YARRRML Matey web editor",id:"yarrrml-matey-web-editor",children:[]},{value:"RMHell web editor",id:"rmhell-web-editor",children:[]},{value:"Mapeathor",id:"mapeathor",children:[]},{value:"Using functions",id:"using-functions",children:[]}]},{value:"Compute HCLS metadata",id:"compute-hcls-metadata",children:[]}],i={toc:p};function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Use the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/"}),"RDF Mapping Language (RML)")," to map your structured data (CSV, TSV, SQL, XML, JSON, YAML) to RDF using a declarative mapping language. "),Object(o.b)("p",null,"By default we use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/yarrrml/"}),"YARRRML"),", a YAML mapping language, to make the definition of RML mappings easier. RML mappings defined using Turtle can also be executed."),Object(o.b)("h2",{id:"download-files-to-convert"},"Download files to convert"),Object(o.b)("p",null,"The following documentation will use the COHD Clinical CSV data and a Geonames TSV dataset as example. Download the dataset, if not already done:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s download cohd geonames\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"See the download Bash scripts for ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/download/download.sh"}),"COHD")," and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/geonames/download/download.sh"}),"GeoNames"),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Downloaded files goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/input/cohd"))),Object(o.b)("h2",{id:"run-rml-mapper"},"Run RML Mapper"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/RMLio/rmlmapper-java/"}),"rmlmapper-java")," execute RML mappings to generate RDF Knowledge Graphs. It loads all data in memory, so be aware when working with big datasets."),Object(o.b)("p",null,"By default ",Object(o.b)("inlineCode",{parentName:"p"},"d2s rml")," will execute RML files defined in the RDF Turtle format, in files with the extension ",Object(o.b)("inlineCode",{parentName:"p"},".rml.ttl")," (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"datasets/<dataset_id>/mapping/associations-mapping.rml.ttl"),")"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml cohd --mapper\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/import/rmlmapper-associations-mapping_rml_ttl-cohd.nt"))),Object(o.b)("p",null,"You can execute ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/yarrrml/spec/"}),"YARRRML")," mappings defined in files with the extension ",Object(o.b)("inlineCode",{parentName:"p"},".yarrr.yml"),", by providing the argument ",Object(o.b)("inlineCode",{parentName:"p"},"--yarrrml"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml geonames --yarrrml --mapper\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"If you face memory issues, you might need to change the maximum memory allocated to Java (",Object(o.b)("inlineCode",{parentName:"p"},"-xmx"),"), or try using the RMLStreamer documented below.")),Object(o.b)("h2",{id:"run-rml-streamer"},"Run RML Streamer"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/services-utilities#rmlstreamer"}),"RMLStreamer")," is a scalable implementation of the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/specs/rml/"}),"RDF Mapping Language Specifications")," to generate RDF out of structured input data streams."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f The RMLStreamer is still in development, some features such as functions are yet to be implemented.")),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/specs/rml/"}),"RML mappings")," needs to be defined as in a file with the extension ",Object(o.b)("inlineCode",{parentName:"p"},".rml.ttl"),", in the mapping folder of the dataset to transform, e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"datasets/dataset_id/mapping/associations-mapping.rml.ttl")),Object(o.b)("h3",{id:"start-apache-flink"},"Start Apache Flink"),Object(o.b)("p",null,"Starting ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://flink.apache.org/"}),"Apache Flink")," is required to stream the files:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s start rmlstreamer rmltask\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:8078 to see running jobs.")),Object(o.b)("h3",{id:"run-job"},"Run job"),Object(o.b)("p",null,"We provide an example converting a sample of ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/mapping/associations-mapping.rml.ttl"}),"COHD")," (clinical concepts co-occurences from FDA reports) to the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://biolink.github.io/biolink-model/docs/"}),"BioLink")," model:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml cohd\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/import/rmlstreamer-associations-mapping_rml_ttl-cohd.nt")," and can then be loaded to a triplestore.")),Object(o.b)("p",null,"You can also provide ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/yarrrml/spec/"}),"YARRRML")," files with the extensions ",Object(o.b)("inlineCode",{parentName:"p"},".yarrr.yml")," to be processed to ",Object(o.b)("inlineCode",{parentName:"p"},".rml.ttl")," files before running RML:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml geonames --yarrrml\n")),Object(o.b)("p",null,"The command run detached by default, you can keep the terminal attached and watch the execution:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml cohd --watch\n")),Object(o.b)("p",null,"Generate NQuads by adding the graph infos in the ",Object(o.b)("inlineCode",{parentName:"p"},"rr:subjectMap")," in RML mappings:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-turtle"}),"rr:graphMap [ rr:constant <https://w3id.org/trek/graph/drugbank> ];\n")),Object(o.b)("h3",{id:"run-on-openshift"},"Run on OpenShift"),Object(o.b)("p",null,"Still experimental, the RMLStreamer can be run on the ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://maastrichtu-ids.github.io/dsri-documentation/"}),"Data Science Research Infrastructure"))," OpenShift cluster."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"See the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-services#apache-flink"}),"DSRI documentation")," to deploy Apache Flink.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Copy the RMLStreamer.jar file, your mapping files and data files to the pod. It will be proposed when running ",Object(o.b)("inlineCode",{parentName:"p"},"d2s rml")," but they could be loaded manually before. "))),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"# get flink pod id\noc get pod --selector app=flink --selector component=jobmanager --no-headers -o=custom-columns=NAME:.metadata.name\n\noc exec <flink-jobmanager-id> -- mkdir -p /mnt/workspace/import\noc rsync workspace/input <flink-jobmanager-id>:/mnt/workspace/\noc rsync datasets <flink-jobmanager-id>:/mnt/\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Transferring the files to the Apache Flink storage easily is still a work in progress. Use ",Object(o.b)("inlineCode",{parentName:"p"},"oc cp")," if rsync does not work.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Run the RMLStreamer job on the GeoNames example:")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s rml geonames --openshift\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"The progress of the job can be checked in the Apache Flink web UI.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output file in ",Object(o.b)("inlineCode",{parentName:"p"},"/mnt/rdf_output-associations-mapping.nt")," in the pod"),Object(o.b)("p",{parentName:"blockquote"},"Or in ",Object(o.b)("inlineCode",{parentName:"p"},"/apache-flink")," in the persistent storage.")),Object(o.b)("h2",{id:"edit-rml-mappings"},"Edit RML mappings"),Object(o.b)("h3",{id:"yarrrml-matey-web-editor"},"YARRRML Matey web editor"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",Object(n.a)({parentName:"strong"},{href:"https://rml.io/yarrrml/matey/#edit"}),"Matey Web UI editor \ud83e\udd9c"))," is available to easily write RML mappings in ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://yaml.org/"}),"YAML")," files using the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/yarrrml/"}),"YARRRML")," simplified mapping language. The mappings can be conveniently tested in the browser on a sample of the file to transform."),Object(o.b)("p",null,"RML Specifications can be found as a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/specs/rml/"}),"W3C unofficial draft"),"."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"See the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/"}),"rml.io")," website for more documentation about RML and the various tools built and deployed by Ghent University.")),Object(o.b)("p",null,"YARRRML can also be parsed locally using a npm package:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"npm i @rmlio/yarrrml-parser -g\n")),Object(o.b)("h3",{id:"rmhell-web-editor"},"RMHell web editor"),Object(o.b)("p",null,"Similar to Matey, ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://semantifyit.github.io/rml/"}),Object(o.b)("strong",{parentName:"a"},"RMHell web UI editor"))," allow to write YARRRML or RML and test it against a sample input file in a web browser."),Object(o.b)("h3",{id:"mapeathor"},"Mapeathor"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/oeg-upm/Mapeathor"}),"Mapeathor")," converts Excel mappings into R2RML, RML or YARRRML mappings. Functions not supported."),Object(o.b)("p",null,"Run Mapeathor locally:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s start mapeathor\n")),Object(o.b)("p",null,"Make sure the xlsx file is in the mapping folder of the datasets and execute the conversion to YARRRML:   "),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"docker exec -it mapeathor ./run.sh /Mapeathor/data/<dataset_id>/mapping/<mapping_spreadsheet>.xlsx YARRRML\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output format can be ",Object(o.b)("inlineCode",{parentName:"p"},"RML"),", ",Object(o.b)("inlineCode",{parentName:"p"},"R2RML")," and ",Object(o.b)("inlineCode",{parentName:"p"},"YARRRML"),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"The RML file will be generated in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/mapeathor"))),Object(o.b)("h3",{id:"using-functions"},"Using functions"),Object(o.b)("p",null,"RML functions are still not implemented in the RMLStreamer, use the RML Mapper if you want to make use of them. See the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/docs/rmlmapper/default-functions/"}),"full list of available default functions"),"."),Object(o.b)("p",null,"Example using the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rml.io/docs/rmlmapper/default-functions/#split"}),"split function"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-yaml"}),'prefixes:\n  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"\n  rdfs: "http://www.w3.org/2000/01/rdf-schema#"\n  gn: "http://www.geonames.org/ontology#"\nmappings:\n  neighbours:\n    sources:\n      - [\'/mnt/workspace/input/geonames/dataset-geonames-countryInfo.csv~csv\']\n    s: http://www.geonames.org/ontology#$(ISO)\n    po:\n      - [a, gn:Country]\n      - p: gn:neighbours\n        o:\n            function: grel:string_split\n            parameters:\n                - [grel:valueParameter, $(neighbours)]\n                - [grel:p_string_sep, "\\|"]\n            language: en\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"grel:p_string_sep")," separators needs to be escaped with ",Object(o.b)("inlineCode",{parentName:"p"},"\\"))),Object(o.b)("p",null,"Additional function can be added by integrating them in a ",Object(o.b)("inlineCode",{parentName:"p"},".jar")," file, see the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/RMLio/rmlmapper-java#including-functions"}),"documentation"),"."),Object(o.b)("h2",{id:"compute-hcls-metadata"},"Compute HCLS metadata"),Object(o.b)("p",null,"After the RDF Knowledge Graph has been generated and loaded in a triplestore, ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.w3.org/TR/hcls-dataset/"}),"HCLS descriptive metadata and statistics")," can be easily computed and inserted for the different datasets (graphs in the triplestore), by running a CWL workflow:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-shell"}),"d2s run compute-hcls-metadata.cwl cohd\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Insert dataset metadata defined in the ",Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/cohd/metadata"}),"datasets/cohd/metadata")," folder."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(n.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-scripts-repository/tree/master/sparql/compute-hcls-stats"}),"Compute and insert HCLS")," descriptive statistics using SPARQL queries.")))}b.isMDXComponent=!0},137:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=r.a.createContext({}),b=function(e){var t=r.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},s=function(e){var t=b(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),s=b(a),d=n,u=s["".concat(l,".").concat(d)]||s[d]||m[d]||o;return a?r.a.createElement(u,c(c({ref:t},i),{},{components:a})):r.a.createElement(u,c({ref:t},i))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,l[1]=c;for(var i=2;i<o;i++)l[i]=a[i];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);