(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{112:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return l}));var n=r(3),a=r(7),o=(r(0),r(126)),i={id:"use-python",title:"Use Python"},c={unversionedId:"use-python",id:"use-python",isDocsHomePage:!1,title:"Use Python",description:"Add a requirements file",source:"@site/docs/use-python.md",slug:"/use-python",permalink:"/docs/use-python",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/use-python.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1610649962,sidebar:"docs",previous:{title:"Convert with RML",permalink:"/docs/convert-rml"},next:{title:"Deploy workflows",permalink:"/docs/workflow-github"}},p=[{value:"Add a requirements file",id:"add-a-requirements-file",children:[]},{value:"Python for preprocessing",id:"python-for-preprocessing",children:[]},{value:"Python for RDF conversion",id:"python-for-rdf-conversion",children:[{value:"RDFLib",id:"rdflib",children:[]},{value:"Pandas",id:"pandas",children:[]},{value:"Dipper",id:"dipper",children:[]}]}],s={toc:p};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"add-a-requirements-file"},"Add a requirements file"),Object(o.b)("p",null,"Always add a ",Object(o.b)("inlineCode",{parentName:"p"},"requirements.txt")," file at the root of your repository with all libraries required to run your Python scripts."),Object(o.b)("p",null,"For example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{}),"rdflib\nSPARQLWrapper\npandas\ndipper\n")),Object(o.b)("p",null,"Command to install the dependencies:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"pip install -r requirements.txt\n")),Object(o.b)("h2",{id:"python-for-preprocessing"},"Python for preprocessing"),Object(o.b)("p",null,"Python is a good solution to perform preprocessing on the data for tasks not supported by RML. "),Object(o.b)("h2",{id:"python-for-rdf-conversion"},"Python for RDF conversion"),Object(o.b)("h3",{id:"rdflib"},"RDFLib"),Object(o.b)("p",null,"You can perform the conversion to RDF using the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://rdflib.readthedocs.io/en/stable/"}),"RDFLib")," library."),Object(o.b)("p",null,"You can easily map any structured data (CSV, TSV, XLSX, SPSS, SQL, XML, JSON, YAML...) to RDF using Python and ",Object(o.b)("inlineCode",{parentName:"p"},"rdflib"),"."),Object(o.b)("h3",{id:"pandas"},"Pandas"),Object(o.b)("p",null,"We recommend to use ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://pandas.pydata.org/"}),"Pandas")," to handle tabular files as dataframes efficiently."),Object(o.b)("h3",{id:"dipper"},"Dipper"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://dipper.readthedocs.io/en/latest/"}),"Dipper")," is a ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://pypi.org/project/dipper/"}),"Python package")," to generate RDF triples from common scientific resources. It has been used to build and expose RDF from multiple sources for the ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://monarchinitiative.org"}),"Monarch Initiative"),"."),Object(o.b)("p",null,"Dipper includes subpackages and modules to create graphical models of this data, including:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Models package for generating common sets of triples, including  common OWL axioms, complex genotypes, associations, evidence and  provenance models.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Graph package for building graphs with RDFLib or streaming n-triples")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Source package containing fetchers and parsers that interface with remote databases and web services"))))}l.isMDXComponent=!0},126:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return f}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),l=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},d=function(e){var t=l(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=l(r),b=n,f=d["".concat(i,".").concat(b)]||d[b]||u[b]||o;return r?a.a.createElement(f,c(c({ref:t},s),{},{components:r})):a.a.createElement(f,c({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);