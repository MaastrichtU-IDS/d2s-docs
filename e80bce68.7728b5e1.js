(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{134:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(3),r=a(7),l=(a(0),a(141)),o=["components"],i={id:"d2s-rml",title:"Run RML transformations"},p={unversionedId:"d2s-rml",id:"d2s-rml",isDocsHomePage:!1,title:"Run RML transformations",description:"Use the RDF Mapping Language (RML) to map your structured data (CSV, TSV, SQL, XML, JSON, YAML) to RDF using a declarative mapping language.",source:"@site/docs/d2s-rml.md",slug:"/d2s-rml",permalink:"/docs/d2s-rml",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/d2s-rml.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1655461851},c=[{value:"Download files to convert",id:"download-files-to-convert",children:[]},{value:"Tools for RML conversion",id:"tools-for-rml-conversion",children:[]},{value:"Run RML Mapper",id:"run-rml-mapper",children:[]},{value:"Run RML Streamer",id:"run-rml-streamer",children:[{value:"Start Apache Flink",id:"start-apache-flink",children:[]},{value:"Run job",id:"run-job",children:[]},{value:"Run on OpenShift",id:"run-on-openshift",children:[]}]},{value:"Edit RML mappings",id:"edit-rml-mappings",children:[{value:"YARRRML Matey web editor",id:"yarrrml-matey-web-editor",children:[]},{value:"RMHell web editor",id:"rmhell-web-editor",children:[]},{value:"Mapeathor",id:"mapeathor",children:[]},{value:"Using functions",id:"using-functions",children:[]}]},{value:"Compute HCLS metadata",id:"compute-hcls-metadata",children:[]}],s={toc:c};function b(e){var t=e.components,a=Object(r.a)(e,o);return Object(l.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Use the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/"},"RDF Mapping Language (RML)")," to map your structured data (CSV, TSV, SQL, XML, JSON, YAML) to RDF using a declarative mapping language. "),Object(l.b)("p",null,"By default we use ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/yarrrml/"},"YARRRML"),", a YAML mapping language, to make the definition of RML mappings easier. RML mappings defined using Turtle can also be executed."),Object(l.b)("h2",{id:"download-files-to-convert"},"Download files to convert"),Object(l.b)("p",null,"The following documentation will use the COHD Clinical CSV data and a Geonames TSV dataset as example. Download the dataset, if not already done:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s download cohd geonames\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"See the download Bash scripts for ",Object(l.b)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/download/download.sh"},"COHD")," and ",Object(l.b)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/geonames/download/download.sh"},"GeoNames"),".")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Downloaded files goes to ",Object(l.b)("inlineCode",{parentName:"p"},"workspace/input/cohd"))),Object(l.b)("h2",{id:"tools-for-rml-conversion"},"Tools for RML conversion"),Object(l.b)("p",null,"There are multiple tools to generate RDF from RML mappings."),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/RMLio/rmlmapper-java"},"rmlmapper-java")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Reference implementation, written in java"),Object(l.b)("li",{parentName:"ul"},"Not suited for large file"),Object(l.b)("li",{parentName:"ul"},"Supports custom functions (in java, compiled as separate ",Object(l.b)("inlineCode",{parentName:"li"},".jar")," files)")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/RMLio/RMLStreamer"},"RMLStreamer")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Streaming implementation for really large files, written in Scala"),Object(l.b)("li",{parentName:"ul"},"Can be parallelized on Apache Flink clusters"),Object(l.b)("li",{parentName:"ul"},"Does not support custom functions yet")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/SDM-TIB/SDM-RDFizer"},"SDM-RDFizer")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Written in Python"),Object(l.b)("li",{parentName:"ul"},"Can use a separate tool, ",Object(l.b)("a",{parentName:"li",href:"https://github.com/SDM-TIB/Dragoman"},"Dragoman"),", for executing custom functions")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://morph-kgc.readthedocs.io/en/latest/documentation/"},"morph-kgc")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Written in Python"),Object(l.b)("li",{parentName:"ul"},"Does not support custom functions")),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/semantifyit/RocketRML"},"RocketRML")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Written in JavaScript"),Object(l.b)("li",{parentName:"ul"},"Provide an easy way to define custom functions")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"We currently only implemented the rmlmapper-java and the RMLStreamer in ",Object(l.b)("inlineCode",{parentName:"p"},"d2s"),", but you are encouraged to use the tool that fits your needs.")),Object(l.b)("h2",{id:"run-rml-mapper"},"Run RML Mapper"),Object(l.b)("p",null,"The ",Object(l.b)("a",{parentName:"p",href:"https://github.com/RMLio/rmlmapper-java/"},"rmlmapper-java")," execute RML mappings to generate RDF Knowledge Graphs. It loads all data in memory, so be aware when working with big datasets."),Object(l.b)("p",null,"By default ",Object(l.b)("inlineCode",{parentName:"p"},"d2s rml")," will execute RML files defined in the RDF Turtle format, in files with the extension ",Object(l.b)("inlineCode",{parentName:"p"},".rml.ttl")," (e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"datasets/<dataset_id>/mapping/associations-mapping.rml.ttl"),")"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml cohd --mapper\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Output goes to ",Object(l.b)("inlineCode",{parentName:"p"},"workspace/import/rmlmapper-associations-mapping_rml_ttl-cohd.nt"))),Object(l.b)("p",null,"You can execute ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/yarrrml/spec/"},"YARRRML")," mappings defined in files with the extension ",Object(l.b)("inlineCode",{parentName:"p"},".yarrr.yml"),", by providing the argument ",Object(l.b)("inlineCode",{parentName:"p"},"--yarrrml"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml geonames --yarrrml --mapper\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"If you face memory issues, you might need to change the maximum memory allocated to Java (",Object(l.b)("inlineCode",{parentName:"p"},"-xmx"),"), or try using the RMLStreamer documented below.")),Object(l.b)("h2",{id:"run-rml-streamer"},"Run RML Streamer"),Object(l.b)("p",null,"The ",Object(l.b)("a",{parentName:"p",href:"/docs/services-utilities#rmlstreamer"},"RMLStreamer")," is a scalable implementation of the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/specs/rml/"},"RDF Mapping Language Specifications")," to generate RDF out of structured input data streams."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f The RMLStreamer is still in development, some features such as functions are yet to be implemented.")),Object(l.b)("p",null,"The ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/specs/rml/"},"RML mappings")," needs to be defined as in a file with the extension ",Object(l.b)("inlineCode",{parentName:"p"},".rml.ttl"),", in the mapping folder of the dataset to transform, e.g. ",Object(l.b)("inlineCode",{parentName:"p"},"datasets/dataset_id/mapping/associations-mapping.rml.ttl")),Object(l.b)("h3",{id:"start-apache-flink"},"Start Apache Flink"),Object(l.b)("p",null,"Starting ",Object(l.b)("a",{parentName:"p",href:"https://flink.apache.org/"},"Apache Flink")," is required to stream the files:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s start rmlstreamer rmltask\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Access at http://localhost:8078 to see running jobs.")),Object(l.b)("h3",{id:"run-job"},"Run job"),Object(l.b)("p",null,"We provide an example converting a sample of ",Object(l.b)("a",{parentName:"p",href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/mapping/associations-mapping.rml.ttl"},"COHD")," (clinical concepts co-occurences from FDA reports) to the ",Object(l.b)("a",{parentName:"p",href:"https://biolink.github.io/biolink-model/docs/"},"BioLink")," model:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml cohd\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Output goes to ",Object(l.b)("inlineCode",{parentName:"p"},"workspace/import/rmlstreamer-associations-mapping_rml_ttl-cohd.nt")," and can then be loaded to a triplestore.")),Object(l.b)("p",null,"You can also provide ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/yarrrml/spec/"},"YARRRML")," files with the extensions ",Object(l.b)("inlineCode",{parentName:"p"},".yarrr.yml")," to be processed to ",Object(l.b)("inlineCode",{parentName:"p"},".rml.ttl")," files before running RML:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml geonames --yarrrml\n")),Object(l.b)("p",null,"The command run detached by default, you can keep the terminal attached and watch the execution:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml cohd --watch\n")),Object(l.b)("p",null,"Generate NQuads by adding the graph infos in the ",Object(l.b)("inlineCode",{parentName:"p"},"rr:subjectMap")," in RML mappings:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-turtle"},"rr:graphMap [ rr:constant <https://w3id.org/trek/graph/drugbank> ];\n")),Object(l.b)("h3",{id:"run-on-openshift"},"Run on OpenShift"),Object(l.b)("p",null,"Still experimental, the RMLStreamer can be run on the ",Object(l.b)("strong",{parentName:"p"},Object(l.b)("a",{parentName:"strong",href:"https://maastrichtu-ids.github.io/dsri-documentation/"},"Data Science Research Infrastructure"))," OpenShift cluster."),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"See the ",Object(l.b)("a",{parentName:"p",href:"https://maastrichtu-ids.github.io/dsri-documentation/docs/deploy-services#apache-flink"},"DSRI documentation")," to deploy Apache Flink.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Copy the RMLStreamer.jar file, your mapping files and data files to the pod. It will be proposed when running ",Object(l.b)("inlineCode",{parentName:"p"},"d2s rml")," but they could be loaded manually before. "))),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"# get flink pod id\noc get pod --selector app=flink --selector component=jobmanager --no-headers -o=custom-columns=NAME:.metadata.name\n\noc exec <flink-jobmanager-id> -- mkdir -p /mnt/workspace/import\noc rsync workspace/input <flink-jobmanager-id>:/mnt/workspace/\noc rsync datasets <flink-jobmanager-id>:/mnt/\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Transferring the files to the Apache Flink storage easily is still a work in progress. Use ",Object(l.b)("inlineCode",{parentName:"p"},"oc cp")," if rsync does not work.")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Run the RMLStreamer job on the GeoNames example:")),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s rml geonames --openshift\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"The progress of the job can be checked in the Apache Flink web UI.")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Output file in ",Object(l.b)("inlineCode",{parentName:"p"},"/mnt/rdf_output-associations-mapping.nt")," in the pod"),Object(l.b)("p",{parentName:"blockquote"},"Or in ",Object(l.b)("inlineCode",{parentName:"p"},"/apache-flink")," in the persistent storage.")),Object(l.b)("h2",{id:"edit-rml-mappings"},"Edit RML mappings"),Object(l.b)("h3",{id:"yarrrml-matey-web-editor"},"YARRRML Matey web editor"),Object(l.b)("p",null,"The ",Object(l.b)("strong",{parentName:"p"},Object(l.b)("a",{parentName:"strong",href:"https://rml.io/yarrrml/matey/#edit"},"Matey Web UI editor \ud83e\udd9c"))," is available to easily write RML mappings in ",Object(l.b)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," files using the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/yarrrml/"},"YARRRML")," simplified mapping language. The mappings can be conveniently tested in the browser on a sample of the file to transform."),Object(l.b)("p",null,"RML Specifications can be found as a ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/specs/rml/"},"W3C unofficial draft"),"."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"See the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/"},"rml.io")," website for more documentation about RML and the various tools built and deployed by Ghent University.")),Object(l.b)("p",null,"YARRRML can also be parsed locally using a npm package:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"npm i @rmlio/yarrrml-parser -g\n")),Object(l.b)("h3",{id:"rmhell-web-editor"},"RMHell web editor"),Object(l.b)("p",null,"Similar to Matey, ",Object(l.b)("a",{parentName:"p",href:"https://semantifyit.github.io/rml/"},Object(l.b)("strong",{parentName:"a"},"RMHell web UI editor"))," allow to write YARRRML or RML and test it against a sample input file in a web browser."),Object(l.b)("h3",{id:"mapeathor"},"Mapeathor"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://github.com/oeg-upm/Mapeathor"},"Mapeathor")," converts Excel mappings into R2RML, RML or YARRRML mappings. Functions not supported."),Object(l.b)("p",null,"Run Mapeathor locally:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s start mapeathor\n")),Object(l.b)("p",null,"Make sure the xlsx file is in the mapping folder of the datasets and execute the conversion to YARRRML:   "),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"docker exec -it mapeathor ./run.sh /Mapeathor/data/<dataset_id>/mapping/<mapping_spreadsheet>.xlsx YARRRML\n")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Output format can be ",Object(l.b)("inlineCode",{parentName:"p"},"RML"),", ",Object(l.b)("inlineCode",{parentName:"p"},"R2RML")," and ",Object(l.b)("inlineCode",{parentName:"p"},"YARRRML"),".")),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"The RML file will be generated in ",Object(l.b)("inlineCode",{parentName:"p"},"workspace/mapeathor"))),Object(l.b)("h3",{id:"using-functions"},"Using functions"),Object(l.b)("p",null,"RML functions are still not implemented in the RMLStreamer, use the RML Mapper if you want to make use of them. See the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/docs/rmlmapper/default-functions/"},"full list of available default functions"),"."),Object(l.b)("p",null,"Example using the ",Object(l.b)("a",{parentName:"p",href:"https://rml.io/docs/rmlmapper/default-functions/#split"},"split function"),":"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-yaml"},'prefixes:\n  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"\n  rdfs: "http://www.w3.org/2000/01/rdf-schema#"\n  gn: "http://www.geonames.org/ontology#"\nmappings:\n  neighbours:\n    sources:\n      - [\'/mnt/workspace/input/geonames/dataset-geonames-countryInfo.csv~csv\']\n    s: http://www.geonames.org/ontology#$(ISO)\n    po:\n      - [a, gn:Country]\n      - p: gn:neighbours\n        o:\n            function: grel:string_split\n            parameters:\n                - [grel:valueParameter, $(neighbours)]\n                - [grel:p_string_sep, "\\|"]\n            language: en\n')),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},Object(l.b)("inlineCode",{parentName:"p"},"grel:p_string_sep")," separators needs to be escaped with ",Object(l.b)("inlineCode",{parentName:"p"},"\\"))),Object(l.b)("p",null,"Additional function can be added by integrating them in a ",Object(l.b)("inlineCode",{parentName:"p"},".jar")," file, see the ",Object(l.b)("a",{parentName:"p",href:"https://github.com/RMLio/rmlmapper-java#including-functions"},"documentation"),"."),Object(l.b)("h2",{id:"compute-hcls-metadata"},"Compute HCLS metadata"),Object(l.b)("p",null,"After the RDF Knowledge Graph has been generated and loaded in a triplestore, ",Object(l.b)("a",{parentName:"p",href:"https://www.w3.org/TR/hcls-dataset/"},"HCLS descriptive metadata and statistics")," can be easily computed and inserted for the different datasets (graphs in the triplestore), by running a CWL workflow:"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-shell"},"d2s run compute-hcls-metadata.cwl cohd\n")),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Insert dataset metadata defined in the ",Object(l.b)("a",{parentName:"li",href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/cohd/metadata"},"datasets/cohd/metadata")," folder."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",{parentName:"li",href:"https://github.com/MaastrichtU-IDS/d2s-scripts-repository/tree/master/sparql/compute-hcls-stats"},"Compute and insert HCLS")," descriptive statistics using SPARQL queries.")))}b.isMDXComponent=!0},141:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return d}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),b=s(a),u=n,d=b["".concat(o,".").concat(u)]||b[u]||m[u]||l;return a?r.a.createElement(d,i(i({ref:t},c),{},{components:a})):r.a.createElement(d,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var c=2;c<l;c++)o[c]=a[c];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);