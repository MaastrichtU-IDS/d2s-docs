(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{141:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),b=n,d=u["".concat(l,".").concat(b)]||u[b]||m[b]||o;return r?a.a.createElement(d,i(i({ref:t},s),{},{components:r})):a.a.createElement(d,i({ref:t},s))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var s=2;s<o;s++)l[s]=r[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},87:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),o=(r(0),r(141)),l=["components"],i={id:"argo-volume",title:"Define volumes"},c={unversionedId:"argo-volume",id:"argo-volume",isDocsHomePage:!1,title:"Define volumes",description:"Define persistent volume",source:"@site/docs/argo-volume.md",slug:"/argo-volume",permalink:"/docs/argo-volume",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/argo-volume.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1645438229,sidebar:"docs",previous:{title:"Login to OpenShift",permalink:"/docs/argo-login"},next:{title:"Run Argo workflows",permalink:"/docs/argo-run"}},s=[{value:"Define persistent volume",id:"define-persistent-volume",children:[]},{value:"Mount a filesystem UI",id:"mount-a-filesystem-ui",children:[]},{value:"Define a temporary volume for a workflow",id:"define-a-temporary-volume-for-a-workflow",children:[]}],p={toc:s};function u(e){var t=e.components,r=Object(a.a)(e,l);return Object(o.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"define-persistent-volume"},"Define persistent volume"),Object(o.b)("p",null,"Go to ",Object(o.b)("a",{parentName:"p",href:"https://app.dsri.unimaas.nl:8443/console/project/argo/create-pvc"},"https://app.dsri.unimaas.nl:8443/console/project/argo/create-pvc")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Storage class > ",Object(o.b)("inlineCode",{parentName:"li"},"maprfs-ephemeral")),Object(o.b)("li",{parentName:"ul"},"Shared Access (RWX)")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"mount-a-filesystem-ui"},"Mount a filesystem UI"),Object(o.b)("p",null,"Deploy ",Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/filebrowser/filebrowser"},"filebrowser")," on MapR to access volumes"),Object(o.b)("p",null,"Go to ",Object(o.b)("a",{parentName:"p",href:"https://app.dsri.unimaas.nl:8443/console/catalog"},"https://app.dsri.unimaas.nl:8443/console/catalog")," > click ",Object(o.b)("strong",{parentName:"p"},"Deploy image")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Add to Project: ",Object(o.b)("inlineCode",{parentName:"li"},"argo")),Object(o.b)("li",{parentName:"ul"},"Image Name: ",Object(o.b)("inlineCode",{parentName:"li"},"filebrowser/filebrowser")," "),Object(o.b)("li",{parentName:"ul"},"Give a name to your image: ",Object(o.b)("inlineCode",{parentName:"li"},"filebrowser")),Object(o.b)("li",{parentName:"ul"},"Click ",Object(o.b)("strong",{parentName:"li"},"Deploy")),Object(o.b)("li",{parentName:"ul"},"Go to ",Object(o.b)("inlineCode",{parentName:"li"},"argo")," project > Click on latest deployment of the ",Object(o.b)("inlineCode",{parentName:"li"},"filebrowser")),Object(o.b)("li",{parentName:"ul"},"Delete the automatically mounted volume, and add the persistent volume (",Object(o.b)("inlineCode",{parentName:"li"},"data2services-storage"),"). Should be on ",Object(o.b)("inlineCode",{parentName:"li"},"/srv")),Object(o.b)("li",{parentName:"ul"},"Add route")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access on ",Object(o.b)("a",{parentName:"p",href:"http://d2s-filebrowser-argo.app.dsri.unimaas.nl/files/"},"http://d2s-filebrowser-argo.app.dsri.unimaas.nl/files/"))),Object(o.b)("hr",null),Object(o.b)("h2",{id:"define-a-temporary-volume-for-a-workflow"},"Define a temporary volume for a workflow"),Object(o.b)("p",null,"Temporary volumes can be defined in Argo at runtime and are removed when the workflow terminates."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'volumeClaimTemplates:            # define volume, same syntax as k8s Pod spec\n  - metadata:\n      name: workdir              # name of volume claim\n      annotations:\n        volume.beta.kubernetes.io/storage-class: maprfs-ephemeral\n        volume.beta.kubernetes.io/storage-provisioner: mapr.com/maprfs\n    spec:\n      accessModes: [ "ReadWriteOnce" ]\n      resources:\n        requests:\n          storage: 100Gi \n')))}u.isMDXComponent=!0}}]);