(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{127:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return p})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return s}));var r=a(3),n=a(7),o=(a(0),a(141)),p={id:"services-graph-databases",title:"Graph databases"},c={unversionedId:"services-graph-databases",id:"services-graph-databases",isDocsHomePage:!1,title:"Graph databases",description:"List of graph databases: RDF triplestores and property graphs.",source:"@site/docs/services-graph-databases.md",slug:"/services-graph-databases",permalink:"/docs/services-graph-databases",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/services-graph-databases.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1620650017},l=[{value:"RDF triplestores",id:"rdf-triplestores",children:[{value:"Ontotext GraphDB",id:"ontotext-graphdb",children:[]},{value:"Virtuoso",id:"virtuoso",children:[]},{value:"Blazegraph",id:"blazegraph",children:[]},{value:"Jena Fuseki",id:"jena-fuseki",children:[]},{value:"AllegroGraph",id:"allegrograph",children:[]},{value:"AnzoGraph",id:"anzograph",children:[]},{value:"Linked Data Fragments Server",id:"linked-data-fragments-server",children:[]}]},{value:"Property graphs",id:"property-graphs",children:[{value:"Neo4j",id:"neo4j",children:[]}]},{value:"Additional triplestores",id:"additional-triplestores",children:[{value:"Stardog",id:"stardog",children:[]},{value:"MarkLogic",id:"marklogic",children:[]},{value:"RDFox",id:"rdfox",children:[]}]}],b={toc:l};function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"List of graph databases: RDF triplestores and property graphs."),Object(o.b)("h2",{id:"rdf-triplestores"},"RDF triplestores"),Object(o.b)("h3",{id:"ontotext-graphdb"},"Ontotext GraphDB"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/ontotext/graphdb/"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/ontotext/graphdb",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.ontotext.com/"},"Ontotext GraphDB\u2122")," triplestore includes a web UI, various ",Object(o.b)("a",{parentName:"p",href:"http://graphdb.ontotext.com/documentation/free/exploring-data.html"},"data visualizations"),", ",Object(o.b)("a",{parentName:"p",href:"http://graphdb.ontotext.com/documentation/free/loading-data-using-ontorefine.html"},"OntoRefine"),", ",Object(o.b)("a",{parentName:"p",href:"http://graphdb.ontotext.com/documentation/free/shacl-validation.html"},"SHACL validation"),", RDFS/OWL ",Object(o.b)("a",{parentName:"p",href:"http://graphdb.ontotext.com/documentation/standard/reasoning.html"},"reasoning")," to infer new triples and the possibility to deploy multiple repositories. It uses mainly the ",Object(o.b)("a",{parentName:"p",href:"https://rdf4j.org/"},"rdf4j")," framework."),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.ontotext.com/products/graphdb/graphdb-free/"},"Download the zip file")," of GraphDB standalone free version ",Object(o.b)("inlineCode",{parentName:"p"},"9.3.0"),", and place it in ",Object(o.b)("inlineCode",{parentName:"p"},"d2s-core/support/graphdb")," before building the image using ",Object(o.b)("inlineCode",{parentName:"p"},"d2s update"),"(this step is also prompted during ",Object(o.b)("inlineCode",{parentName:"p"},"d2s init"),")."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start graphdb\n\ndocker build -t graphdb --build-arg version=9.3.0 d2s-core/support/graphdb\ndocker run -d --rm --name graphdb -p 7200:7200 \\\n    -v $(pwd)/workspace/graphdb:/opt/graphdb/home \\\n    -v $(pwd)/workspace/import:/root/graphdb-import \\\n    graphdb\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at ",Object(o.b)("a",{parentName:"p",href:"http://localhost:7200/"},"http://localhost:7200/"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"See the ",Object(o.b)("a",{parentName:"p",href:"http://graphdb.ontotext.com/documentation/"},"official Ontotext GraphDB\u2122 documentation")," and the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Ontotext-AD/graphdb-docker"},"source code for Docker images")," for more details.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",{parentName:"p",href:"https://www.ontotext.com/products/graphdb/graphdb-enterprise/"},"Obtain a license")," for more features such as performance improvement, easy deployment using the ",Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/ontotext/graphdb/"},"official DockerHub image")," or distributed deployment on multiple nodes with Kubernetes.")),Object(o.b)("p",null,"GraphDB allow to perform ",Object(o.b)("strong",{parentName:"p"},"bulk load on large files")," using a second container:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Change the repository to be created and loaded in ",Object(o.b)("inlineCode",{parentName:"li"},"workspace/graphdb/preload-config.ttl")," (default: ",Object(o.b)("inlineCode",{parentName:"li"},"demo"),")"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Put the files to be loaded")," in ",Object(o.b)("inlineCode",{parentName:"li"},"workspace/import/preload")," \ud83d\udce9"),Object(o.b)("li",{parentName:"ul"},"Start ",Object(o.b)("inlineCode",{parentName:"li"},"graphdb-preload")," docker container")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start graphdb-preload\n")),Object(o.b)("p",null,"When the preload has completed, the ",Object(o.b)("inlineCode",{parentName:"p"},"graphdb-preload")," container will stop, you can then copy the loaded repository from ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/graphdb/preload-data/repositories")," to the running GraphDB folder:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"cp -r workspace/graphdb/preload-data/repositories/* workspace/graphdb/data/repositories/\n")),Object(o.b)("p",null,"And access the newly loaded repository in the running GraphDB instance without downtime."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"See additional ",Object(o.b)("a",{parentName:"p",href:"/docs/guide-graphdb"},"d2s documentation about setting up GraphDB"))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"virtuoso"},"Virtuoso"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/tenforce/docker-virtuoso"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/github/stars/tenforce/docker-virtuoso?label=GitHub&style=social",alt:"GitHub"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/tenforce/virtuoso"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/tenforce/virtuoso",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://virtuoso.openlinksw.com/"},"OpenLink Virtuoso")," triplestore. Available on ",Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/tenforce/virtuoso/"},"DockerHub"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start virtuoso\n\ndocker run --name virtuoso \\\n    -p 8890:8890 -p 1111:1111 \\\n    -e DBA_PASSWORD=dba \\\n    -e SPARQL_UPDATE=true \\\n    -e DEFAULT_GRAPH=https://w3id.org/d2s/graph \\\n    -v $(pwd)/workspace/virtuoso:/data \\\n    -d tenforce/virtuoso\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:8890/ and SPARQL endpoint at http://localhost:8890/sparql.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Admin username: ",Object(o.b)("inlineCode",{parentName:"p"},"dba")," ")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"CORS can be enabled following ",Object(o.b)("a",{parentName:"p",href:"http://vos.openlinksw.com/owiki/wiki/VOS/VirtTipsAndTricksCORsEnableSPARQLURLs"},"those instructions"),". See our complete ",Object(o.b)("a",{parentName:"p",href:"/docs/guide-virtuoso"},"Virtuoso documentation")," for more details.")),Object(o.b)("p",null,"Clear the Virtuoso triplestore using this command:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},'docker exec -it d2s-virtuoso isql-v -U dba -P dba exec="RDF_GLOBAL_RESET ();"\n')),Object(o.b)("hr",null),Object(o.b)("h3",{id:"blazegraph"},"Blazegraph"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/blazegraph/database"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/github/stars/blazegraph/database?label=GitHub&style=social",alt:"GitHub"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/lyrasis/blazegraph"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/lyrasis/blazegraph",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,"A high-performance ",Object(o.b)("a",{parentName:"p",href:"https://blazegraph.com/"},"RDF graph database"),". See its ",Object(o.b)("a",{parentName:"p",href:"https://github.com/lyrasis/docker-blazegraph"},"documentation for Docker"),". "),Object(o.b)("p",null,"Not developed for 4 years but still efficient and used by Wikidata.  It uses mainly the ",Object(o.b)("a",{parentName:"p",href:"https://rdf4j.org/"},"rdf4j")," framework."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start blazegraph\n\n# Start triplestore with specific UID and GID for the bulk load (UI)\n# Tested on Ubuntu with $UID=1000 and nothing in $GROUPS (by default)\ndocker run --name blazegraph \\\n  -e BLAZEGRAPH_UID=$UID \\\n  -e BLAZEGRAPH_GID=$GROUPS \\\n  -p 8082:8080 \\\n  -v $(pwd)/workspace/import:/data \\\n  lyrasis/blazegraph:2.1.5\n\n# To bulk load: create the dataloader.txt file\nnamespace=kb\npropertyFile=/RWStore.properties\nfileOrDirs=/data\nformat=n-triples\ndefaultGraph=http://defaultGraph\nquiet=false\nverbose=0\nclosure=false\ndurableQueues=true\n\n# And submit it using a HTTP POST query to load all nt files in /data/d2s-workspace\ncurl -X POST \\\n  --data-binary @dataloader.txt \\\n  --header 'Content-Type:text/plain' \\\nhttp://localhost:8889/bigdata/dataloader\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"UID and Group ID needs to be set in order to have the right permission to bulk load a file (example given for Ubuntu). And ",Object(o.b)("inlineCode",{parentName:"p"},"RWStore.properties")," can be rewritten, see ",Object(o.b)("a",{parentName:"p",href:"https://github.com/lyrasis/docker-blazegraph/blob/master/data/RWStore.properties"},"example"),". ")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access UI at http://localhost:8082/bigdata")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"SPARQL endpoint at http://localhost:8080/bigdata/sparql (original port)")),Object(o.b)("p",null,"To clear the graph go to the ",Object(o.b)("a",{parentName:"p",href:"http://localhost:8082/bigdata/#update"},"update tab")," and enter ",Object(o.b)("inlineCode",{parentName:"p"},"clear all")),Object(o.b)("p",null,"Follow ",Object(o.b)("a",{parentName:"p",href:"https://sourceforge.net/p/bigdata/discussion/676946/thread/bf76fb62/"},"those instructions")," to enable CORS on Blazegraph SPARQL endpoint."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"jena-fuseki"},"Jena Fuseki"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/stain/jena-fuseki"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/stain/jena-fuseki",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"http://jena.apache.org/documentation/fuseki2/index.html"},"Fuseki")," is a SPARQL server on top of ",Object(o.b)("a",{parentName:"p",href:"https://jena.apache.org/documentation/tdb/"},"Apache TDB")," RDF store, for single machines. It uses mainly the ",Object(o.b)("a",{parentName:"p",href:"https://jena.apache.org/"},"Jena")," framework."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start fuseki\n\ndocker run -d --name fuseki -p 3030:3030 -v $(pwd)/workspace/fuseki:/fuseki -v $(pwd)/workspace/import:/staging stain/jena-fuseki\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:3030")),Object(o.b)("p",null,"Bulk load files in ",Object(o.b)("inlineCode",{parentName:"p"},"demo")," dataset from ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/import")," (container needs to be stopped):"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"docker-compose -f d2s-core/docker-compose.yml \\\n  run -v $(pwd)/workspace/import:/staging \\\n  stain/jena-fuseki ./load.sh demo test1.ttl test2.nt\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"If you don't specify any filenames to ",Object(o.b)("inlineCode",{parentName:"p"},"load.sh"),", all filenames directly under ",Object(o.b)("inlineCode",{parentName:"p"},"/staging")," that match these GLOB patterns will be loaded:"),Object(o.b)("pre",{parentName:"blockquote"},Object(o.b)("code",{parentName:"pre"},"*.rdf *.rdf.gz *.ttl *.ttl.gz *.owl *.owl.gz *.nt *.nt.gz *.nquads *.nquads.gz\n"))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"allegrograph"},"AllegroGraph"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/franzinc/docker-agraph"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/github/stars/franzinc/docker-agraph?label=GitHub&style=social",alt:"GitHub"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/franzinc/agraph"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/franzinc/agraph",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://franz.com/agraph/"},"AllegroGraph\xae")," is a modern, high-performance, persistent graph database. It supports SPARQL, RDFS++, and Prolog reasoning from numerous client applications. "),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start allegrograph\n\ndocker run -d -m 1g -v $(pwd)/workspace/allegrograph:/data -p 10000-10035:10000-10035 --shm-size 1g --name allegrograph franzinc/agraph:v6.6.0\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:10035")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Default login: ",Object(o.b)("inlineCode",{parentName:"p"},"test")," / ",Object(o.b)("inlineCode",{parentName:"p"},"xyzzy"))),Object(o.b)("p",null,"See ",Object(o.b)("a",{parentName:"p",href:"https://franz.com/agraph/support/documentation/current/agload.html"},"official documentation")," for bulk load."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("strong",{parentName:"p"},"TODO:")," fix shared volumes")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"anzograph"},"AnzoGraph"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/cambridgesemantics/anzograph"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/cambridgesemantics/anzograph",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.cambridgesemantics.com/anzograph/"},"AnzoGraph\xae DB")," by ",Object(o.b)("a",{parentName:"p",href:"https://www.cambridgesemantics.com/"},"Cambridge Semantics"),". See its ",Object(o.b)("a",{parentName:"p",href:"https://docs.cambridgesemantics.com/anzograph/userdoc/deploy-docker.htm"},"official documentation")," to deploy with Docker."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Unregistered Free edition limited to 8G RAM, single user and single node deployment. ")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",{parentName:"p",href:"https://docs.cambridgesemantics.com/anzograph/userdoc/register-license.htm"},"Register")," to access the 16G single node deployment for free.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Deploy AnzoGraph on multi-server cluster for horizontal scaling with the ",Object(o.b)("a",{parentName:"p",href:"https://customercenter.cambridgesemantics.com/products/anzograph/comparisonMatrix.html"},"Enterprise Edition \ud83d\udcb6")))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start anzograph\n\ndocker run -d -p 8086:8080 -p 8443:8443 --name anzograph -v $(pwd)/workspace/anzograph:/opt/anzograph cambridgesemantics/anzograph:2.0.2\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:8086")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Default login: ",Object(o.b)("inlineCode",{parentName:"p"},"admin")," / ",Object(o.b)("inlineCode",{parentName:"p"},"Passw0rd1"),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",{parentName:"p",href:"https://docs.cambridgesemantics.com/anzograph/userdoc/deploy-k8s-helm.htm"},"Kubernetes deployment")," available using Helm.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"linked-data-fragments-server"},"Linked Data Fragments Server"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/LinkedDataFragments/Server.js"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/github/stars/LinkedDataFragments/Server.js?label=GitHub&style=social",alt:"GitHub"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/linkeddatafragments/server.js"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/linkeddatafragments/server.js",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,"Technically not a triplestore, server supporting the ",Object(o.b)("a",{parentName:"p",href:"https://mementoweb.org/guide/rfc/"},"Memento")," protocol to timestamped SPARQL querying over multiple linked data sources, e.g. ",Object(o.b)("a",{parentName:"p",href:"http://www.rdfhdt.org/"},"HDT")," or ",Object(o.b)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-query/"},"SPARQL"),"."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},'d2s start ldf-server\n\ndocker run -p 8085:3000 -t -i --rm \\\n    -v $(pwd)/workspace/hdt-archives:/data \\\n    -v $(pwd)/workspace/ldfserver-config.json:/tmp/config.json \\\n    umids/ldf-server:latest /tmp/config.json\n\n# Query example\ncurl -IL -H "Accept-Datetime: Wed, 15 Apr 2013 00:00:00 GMT" http://localhost:3000/timegate/dbpedia?subject=http%3A%2F%2Fdata2services%2Fmodel%2Fgo-category%2Fprocess\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"HDT archives goes in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/hdt-archives")," and the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/LinkedDataFragments/Server.js/blob/develop/config/config-example-memento.json"},"config file")," is in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/ldfserver-config.json"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:8085")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"property-graphs"},"Property graphs"),Object(o.b)("h3",{id:"neo4j"},"Neo4j"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/neo4j/neo4j"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/github/stars/neo4j/neo4j?label=GitHub&style=social",alt:"GitHub"}))),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/_/neo4j"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/_/neo4j",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,"Not supporting RDF, ",Object(o.b)("a",{parentName:"p",href:"https://neo4j.com/"},"Neo4j")," is a property graph database. It uses ",Object(o.b)("a",{parentName:"p",href:"https://neo4j.com/docs/cypher-manual/current/"},"Cypher")," as query language."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"d2s start neo4j\n\ndocker run -p 7474:7474 -p 7687:7687 -v $(pwd)/workspace/neo4j:/data neo4j\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Access at http://localhost:7474, volume shared at ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/neo4j"))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Login with ",Object(o.b)("inlineCode",{parentName:"p"},"neoj4")," / ",Object(o.b)("inlineCode",{parentName:"p"},"neo4j")," and change the password.virtu")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"additional-triplestores"},"Additional triplestores"),Object(o.b)("h3",{id:"stardog"},"Stardog"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://hub.docker.com/r/stardog/stardog"},Object(o.b)("img",{parentName:"a",src:"https://img.shields.io/docker/pulls/stardog/stardog",alt:"Docker Image Version (latest by date)"}))),Object(o.b)("p",null,"Licensed RDF triplestore \ud83d\udcdc"),Object(o.b)("p",null,"See the ",Object(o.b)("a",{parentName:"p",href:"https://www.stardog.com/docs/#_docker"},"official Stardog documentation")," for Docker. A ",Object(o.b)("a",{parentName:"p",href:"https://github.com/stardog-union/stardog.js"},"JavaScript wrapper is available")," to communicate with Stardog API and SPARQL endpoint."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},'docker run -v $(pwd)/workspace/stardog-license:/var/opt/stardog -e STARDOG_SERVER_JAVA_ARGS="-Xmx8g -Xms8g -XX:MaxDirectMemorySize=2g" stardog/stardog:latest\n')),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u2714\ufe0f If you have a Stardog license, then put ",Object(o.b)("inlineCode",{parentName:"p"},"stardog-license-key.bin")," in the ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/stardog-license")," folder.")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u274c If you don't have a license key, you will be able to retrieve a trial license-key via the command line once you start Stardog.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"marklogic"},"MarkLogic"),Object(o.b)("p",null,"Licensed RDF triplestore \ud83d\udcdc"),Object(o.b)("p",null,"Follow the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/alan-johnson/docker-marklogic"},"GitHub Docker instructions")," to deploy it."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"You will need to download the ",Object(o.b)("a",{parentName:"p",href:"https://developer.marklogic.com/products/marklogic-server/10.0"},"MarkLogic Server \ud83d\udce5"))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"rdfox"},"RDFox"),Object(o.b)("p",null,"Licensed RDF triplestore \ud83d\udcdc"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://www.oxfordsemantic.tech/"},"RDFox")," is a in-memory triplestore only supporting triples. RDFox is a main-memory, scalable, centralized data store that allows users to efficiently manage graph-structured data represented according to the ",Object(o.b)("a",{parentName:"p",href:"https://www.w3.org/RDF/"},"RDF data model"),", run reasoning engines, and query that data using the ",Object(o.b)("a",{parentName:"p",href:"https://www.w3.org/TR/sparql11-query/"},"SPARQL 1.1 query language"),". "),Object(o.b)("p",null,"See the ",Object(o.b)("a",{parentName:"p",href:"https://docs.oxfordsemantic.tech/docker.html"},"documentation")," to deploy it using docker."))}s.isMDXComponent=!0},141:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return u}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var b=n.a.createContext({}),s=function(e){var t=n.a.useContext(b),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},i=function(e){var t=s(e.components);return n.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},h=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),i=s(a),h=r,u=i["".concat(p,".").concat(h)]||i[h]||d[h]||o;return a?n.a.createElement(u,c(c({ref:t},b),{},{components:a})):n.a.createElement(u,c({ref:t},b))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,p=new Array(o);p[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,p[1]=c;for(var b=2;b<o;b++)p[b]=a[b];return n.a.createElement.apply(null,p)}return n.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);