(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{100:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return o})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return b}));var r=a(3),s=a(7),n=(a(0),a(138)),i={id:"d2s-services",title:"Start services"},o={unversionedId:"d2s-services",id:"d2s-services",isDocsHomePage:!1,title:"Start services",description:"Run services such as triplestores, to store your RDF knowledge graph, interfaces or web UI to access the triplestore data. A specific deployment config can be passed using the -d flag.",source:"@site/docs/d2s-services.md",slug:"/d2s-services",permalink:"/docs/d2s-services",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/d2s-services.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1611145871,sidebar:"docs",previous:{title:"Initialize and update",permalink:"/docs/d2s-workspace"},next:{title:"Start services",permalink:"/docs/d2s-services"}},c=[{value:"List of services",id:"list-of-services",children:[{value:"\ud83d\udd17 Graph databases",id:"-graph-databases",children:[]},{value:"\ud83d\udda5\ufe0f Interfaces",id:"\ufe0f-interfaces",children:[]},{value:"\ud83d\udd27 Utilities",id:"-utilities",children:[]}]},{value:"Start demo",id:"start-demo",children:[{value:"Use a deployment config",id:"use-a-deployment-config",children:[]}]},{value:"Manage services",id:"manage-services",children:[{value:"Show running services",id:"show-running-services",children:[]},{value:"Stop all services",id:"stop-all-services",children:[]},{value:"Stop specific services",id:"stop-specific-services",children:[]},{value:"Show running workflows",id:"show-running-workflows",children:[]},{value:"Stop running workflow",id:"stop-running-workflow",children:[]}]}],l={toc:c};function b(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(n.b)("wrapper",Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"Run services such as triplestores, to store your RDF knowledge graph, interfaces or web UI to access the triplestore data. A specific deployment config can be passed using the ",Object(n.b)("inlineCode",{parentName:"p"},"-d")," flag."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s start <service_name> -d <optional_deployment_config>\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Volumes of all containers started by ",Object(n.b)("inlineCode",{parentName:"p"},"d2s")," are shared in the ",Object(n.b)("inlineCode",{parentName:"p"},"workspace/")," folder.")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},Object(n.b)("inlineCode",{parentName:"p"},"d2s")," uses ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/docker-compose.yml"}),"docker-compose")," to run the different services \ud83d\udc33")),Object(n.b)("p",null,"In this documentation we will use a set of services to build the knowledge graph and access it using various interfaces."),Object(n.b)("h2",{id:"list-of-services"},"List of services"),Object(n.b)("p",null,"The services deployments are defined in the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/docker-compose.yml"}),"d2s-core/docker-compose.yml file"),"."),Object(n.b)("p",null,"Start the services described below using:"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s start <service_name>\n")),Object(n.b)("h3",{id:"-graph-databases"},"\ud83d\udd17 Graph databases"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/services-graph-databases"}),"detailed lists of available graph databases"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#graphdb"}),"graphdb"),": commercial triplestore with a web UI and multiple repositories"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#virtuoso"}),"virtuoso"),": Open Source triplestore with a faceted browser"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#blazegraph"}),"blazegraph"),": Open Source lightweight triplestore "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#fuseki"}),"fuseki"),": Open Source SPARQL server built on top of Apache Jena and TDB. "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#allegrograph"}),"allegroGraph"),": commercial triplestore"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#anzograph"}),"anzoGraph"),": commercial triplestore"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#linked-data-fragments-server"}),"ldf-server"),": Open Source Linked Data Fragments server, store and query compressed HDT files"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-graph-databases#neo4j"}),"neo4j"),": commercial property graph database")),Object(n.b)("h3",{id:"\ufe0f-interfaces"},"\ud83d\udda5\ufe0f Interfaces"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/services-interfaces"}),"detailed lists of available interfaces"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#biothings-studio"}),"biothings-studio"),": web UI to build and deploy BioThings APIs "),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-interfaces#into-the-graph"}),"into-the-graph"),": SPARQL web browser leveraging HCLS metadata, with YASGUI editor"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-interfaces#d2s-api"}),"api"),": HTTP Open API  with Swagger UI to query a RDF triplestore, accept ReasonerStd queries"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-interfaces#comunica-widget"}),"comunica"),": widget to query heterogeneous interfaces (SPARQL, HDT) using Comunica SPARQL and GraphQL")),Object(n.b)("h3",{id:"-utilities"},"\ud83d\udd27 Utilities"),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/services-utilities"}),"detailed lists of RDF utilities"),"."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#jupyter-notebooks"}),"notebook"),": JupyterLab with template Notebooks to build and query the triplestore."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#jupyter-notebooks"}),"spark-notebook"),": all Spark JupyterLab to process data."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#docket"}),"docket"),": multiomics tool for dataset overview, comparison and knowledge extraction using Jupyter notebooks."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#rml-streamer"}),"rmlstreamer"),": Apache Flink to process RML mappings",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"rmltask: dependency of the rmlstreamer, the 2 services are required to run"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#apache-drill"}),"drill"),": exposes tabular text files (CSV, TSV, PSV) as SQL using Apache Drill"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#postgres"}),"postgres"),": popular Open Source SQL database"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#limes-interlinking"}),"limes"),": server to perform interlinking between RDF entities using various metrics"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/services-utilities#nanobench"}),"nanobench"),": web UI to publish Nanopublications"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/d2s-rml#mapeathor"}),"mapeathor"),": converts Excel files into RML or YARRRML mappings")),Object(n.b)("h2",{id:"start-demo"},"Start demo"),Object(n.b)("p",null,"Different solutions can used as final triplestore, here we will use ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/services#ontotext-graphdb"}),"Ontotext GraphDB")," as final triplestores for the Knowledge Graph. From our experience GraphDB is more stable and faster performing federated queries, additionally it offers a user-friendly administration. "),Object(n.b)("p",null,"GraphDB ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.ontotext.com/products/graphdb/graphdb-free/"}),"needs to be downloaded")," for licensing reason, provide your address and you will receive an email with the URL to download the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.ontotext.com/products/graphdb/graphdb-free/"}),"GraphDB standalone zip file")," (",Object(n.b)("inlineCode",{parentName:"p"},"graphdb-free-9.1.1-dist.zip"),"). "),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"To ",Object(n.b)("strong",{parentName:"p"},"easily install GraphDB,")," we recommend you to place it in your ",Object(n.b)("inlineCode",{parentName:"p"},"home")," folder before running ",Object(n.b)("inlineCode",{parentName:"p"},"d2s init"),", it is the default when the path to the GraphDB zip file is asked.")),Object(n.b)("p",null,"Start services required to run data transformation demonstration workflows: GraphDB triplestore, Apache Drill and Virtuoso as temporary triplestore."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s start demo\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f GraphDB might fail to start if not enough resources are available. We recommend raising the resources limit for Docker, and stopping resource-intensive apps, such as Slack, VSCode, Skype.")),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Access the into-the-graph browser for GraphDB at http://localhost:8079"),Object(n.b)("li",{parentName:"ul"},"Access the HTTP Swagger API at http://localhost:8080"),Object(n.b)("li",{parentName:"ul"},"Access GraphDB at http://localhost:7200"),Object(n.b)("li",{parentName:"ul"},"Access the temporary Virtuoso at http://localhost:8890")),Object(n.b)("p",null,"If you use  ",Object(n.b)("strong",{parentName:"p"},"Blazegraph")," or ",Object(n.b)("strong",{parentName:"p"},"Virtuoso")," as final triplestore, you will need to ",Object(n.b)("strong",{parentName:"p"},"activate CORS request")," to allow communication between the into-the-graph browser and the triplestore on your browser. "),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"An ",Object(n.b)("strong",{parentName:"p"},"add-on to enable CORS")," can be easily installed for ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://addons.mozilla.org/fr/firefox/addon/cors-everywhere/"}),"Firefox")," or ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf"}),"Chrome"),". ")),Object(n.b)("h3",{id:"use-a-deployment-config"},"Use a deployment config"),Object(n.b)("p",null,"Services can be started with a specific deployment config. This enables to define variable and docker parameters for a specific deployment in a complementary YAML file in the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/tree/master/deployments"}),"d2s-core/deployments folder"),"."),Object(n.b)("p",null,"See the ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/deployments/trek.yml"}),"deployments/",Object(n.b)("strong",{parentName:"a"},"trek"),".yml")," config as example, the following parameters are usually defined in deployment config:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"the service public URL (nginx Virtual Host)"),Object(n.b)("li",{parentName:"ul"},"different Docker image tag for a service (to use different version)"),Object(n.b)("li",{parentName:"ul"},"password"),Object(n.b)("li",{parentName:"ul"},"resources limitations")),Object(n.b)("p",null,"Start services with a deployment config:"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s start graphdb virtuoso drill api rmlstreamer rmltask -d trek\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"Feel free to define a new deployment config if your services requires different parameters than the one defined in the main ",Object(n.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/blob/master/docker-compose.yml"}),"docker-compose.yml"))),Object(n.b)("h2",{id:"manage-services"},"Manage services"),Object(n.b)("h3",{id:"show-running-services"},"Show running services"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s services\n")),Object(n.b)("h3",{id:"stop-all-services"},"Stop all services"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s stop --all\n")),Object(n.b)("h3",{id:"stop-specific-services"},"Stop specific services"),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s stop virtuoso api\n")),Object(n.b)("h3",{id:"show-running-workflows"},"Show running workflows"),Object(n.b)("p",null,"You can get process information about running workflows, such as its process ID."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s process-running\n")),Object(n.b)("h3",{id:"stop-running-workflow"},"Stop running workflow"),Object(n.b)("p",null,"Autocomplete will show only the PID of running workflows."),Object(n.b)("pre",null,Object(n.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s process-stop <workflow_pid>\n")),Object(n.b)("blockquote",null,Object(n.b)("p",{parentName:"blockquote"},"If autocomplete doesn't work, retrieve the PID using ",Object(n.b)("inlineCode",{parentName:"p"},"d2s process-running"))))}b.isMDXComponent=!0},138:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),s=a.n(r);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,r,s=function(e,t){if(null==e)return{};var a,r,s={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var l=s.a.createContext({}),b=function(e){var t=s.a.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=b(e.components);return s.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,n=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=b(a),u=r,m=p["".concat(i,".").concat(u)]||p[u]||d[u]||n;return a?s.a.createElement(m,o(o({ref:t},l),{},{components:a})):s.a.createElement(m,o({ref:t},l))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var n=a.length,i=new Array(n);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var l=2;l<n;l++)i[l]=a[l];return s.a.createElement.apply(null,i)}return s.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);