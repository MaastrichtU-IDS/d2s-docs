(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{137:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var r=a(0),n=a.n(r);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=n.a.createContext({}),b=function(e){var t=n.a.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=b(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),p=b(a),d=r,m=p["".concat(l,".").concat(d)]||p[d]||u[d]||o;return a?n.a.createElement(m,c(c({ref:t},i),{},{components:a})):n.a.createElement(m,c({ref:t},i))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var i=2;i<o;i++)l[i]=a[i];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"},94:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return c})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return b}));var r=a(3),n=a(7),o=(a(0),a(137)),l={id:"d2s-run",title:"Run CWL workflows"},c={unversionedId:"d2s-run",id:"d2s-run",isDocsHomePage:!1,title:"Run CWL workflows",description:"CWL workflows can be run to perform various task such as executing transformation pipeline to build a RDF Knowledge Graph.",source:"@site/docs/d2s-run.md",slug:"/d2s-run",permalink:"/docs/d2s-run",editUrl:"https://github.com/MaastrichtU-IDS/d2s-docs/edit/master/website/docs/d2s-run.md",version:"current",lastUpdatedBy:"Vincent Emonet",lastUpdatedAt:1610961827,sidebar:"docs",previous:{title:"Run RML transformations",permalink:"/docs/d2s-rml"},next:{title:"Use Monarch Dipper",permalink:"/docs/d2s-dipper"}},s=[{value:"Download files to convert",id:"download-files-to-convert",children:[]},{value:"Run CWL workflows",id:"run-cwl-workflows",children:[{value:"Convert CSV/TSV to RDF",id:"convert-csvtsv-to-rdf",children:[]},{value:"Convert XML to RDF",id:"convert-xml-to-rdf",children:[]},{value:"Compute HCLS metadata",id:"compute-hcls-metadata",children:[]},{value:"Generate mappings",id:"generate-mappings",children:[]}]},{value:"Access workflows logs",id:"access-workflows-logs",children:[{value:"Watch a running workflow",id:"watch-a-running-workflow",children:[]},{value:"Display workflow logs",id:"display-workflow-logs",children:[]}]},{value:"Run attached to the terminal",id:"run-attached-to-the-terminal",children:[]},{value:"Further details on SPARQL mappings",id:"further-details-on-sparql-mappings",children:[]}],i={toc:s};function b(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},i,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.commonwl.org/"}),"CWL workflows")," can be run to perform various task such as executing transformation pipeline to build a RDF Knowledge Graph."),Object(o.b)("h2",{id:"download-files-to-convert"},"Download files to convert"),Object(o.b)("p",null,"Files to process (e.g. CSV, XML) needs to be downloaded before running a workflow \ud83d\udce5"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s download <dataset_id>\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Download script defined in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/cohd/download/download.sh"}),"datasets/dataset_id/download/download.sh"),".")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Downloaded files goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/input/dataset_id"),".")),Object(o.b)("h2",{id:"run-cwl-workflows"},"Run CWL workflows"),Object(o.b)("p",null,"Run a CWL workflow defined in ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-core/tree/master/cwl/workflows"}),"d2s-core/cwl/workflows")," on a specific dataset:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s run <workflow_filename>.cwl <dataset_id>\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/output"))),Object(o.b)("h3",{id:"convert-csvtsv-to-rdf"},"Convert CSV/TSV to RDF"),Object(o.b)("p",null,"Use ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/amalic/autor2rml"}),"AutoR2RML")," and Apache Drill to generate R2RML mapping based on input data structure. "),Object(o.b)("p",null,"We provide an example converting a sample of ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/cohd"}),"COHD")," (clinical concepts co-occurences from FDA reports) to the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://biolink.github.io/biolink-model/docs/"}),"BioLink")," model:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s download cohd\nd2s run csv-virtuoso.cwl cohd\n")),Object(o.b)("p",null,"By default the workflow runs detached from your terminal, so you can close the Windows or leave the SSH sessions."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"You might face issues when processing large CSV or TSV file, see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://d2s.semanticscience.org/docs/guide-preprocessing#split-big-files"}),"this documentation")," to deal with big files.")),Object(o.b)("p",null,"A workflow allows to ",Object(o.b)("strong",{parentName:"p"},"split a property")," object: convert CSV/TSV and split statements (e.g. ",Object(o.b)("inlineCode",{parentName:"p"},'?s ?p "value1,value2,value3"')," would be splitted in 3 statements). "),Object(o.b)("p",null,"We provide a example converting a sample of the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/drugbank"}),"EggNOG")," dataset to the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://biolink.github.io/biolink-model/docs/"}),"BioLink")," model:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s download eggnog\nd2s run split-csv-virtuoso.cwl eggnog\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Not tested at the moment. Might need to be fixed.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"convert-xml-to-rdf"},"Convert XML to RDF"),Object(o.b)("p",null,"Use ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/xml2rdf"}),"xml2rdf")," to generate RDF based on the XML structure. "),Object(o.b)("p",null,"We provide a example converting a sample of ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/drugbank"}),"DrugBank \ud83d\udc8a\ufe0f")," (drug associations) to the ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://biolink.github.io/biolink-model/docs/"}),"BioLink")," model."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s download drugbank\nd2s run xml-virtuoso.cwl drugbank\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Output goes to ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/output"))),Object(o.b)("hr",null),Object(o.b)("h3",{id:"compute-hcls-metadata"},"Compute HCLS metadata"),Object(o.b)("p",null,Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.w3.org/TR/hcls-dataset/"}),"HCLS descriptive metadata and statistics")," for datasets can easily be computed and inserted for the generated graph by running a CWL workflow:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s run compute-hcls-metadata.cwl cohd\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Insert dataset metadata defined in the ",Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/cohd/metadata"}),"datasets/cohd/metadata")," folder."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-scripts-repository/tree/master/sparql/compute-hcls-stats"}),"Compute and insert HCLS")," descriptive statistics using SPARQL queries.")),Object(o.b)("hr",null),Object(o.b)("h3",{id:"generate-mappings"},"Generate mappings"),Object(o.b)("p",null,"When you start converting a new dataset ",Object(o.b)("inlineCode",{parentName:"p"},"d2s")," can help you generating mapping files based on the input data structure. You can then edit the generated SPARQL queries to adapt them to your target model."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s run csv-virtuoso.cwl cohd --get-mappings\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("inlineCode",{parentName:"p"},"--get-mappings"),"  causes the mapping queries based on the input data structure generated by ",Object(o.b)("inlineCode",{parentName:"p"},"d2s")," to be copied to ",Object(o.b)("inlineCode",{parentName:"p"},"/datasets/$dataset_id/mappings"))),Object(o.b)("p",null,"You can use those mappings as starting point to map the input data to your target model."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Note: nested XML files can generate a lot of mapping files.")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"access-workflows-logs"},"Access workflows logs"),Object(o.b)("p",null,"The workflow logs are stored in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/logs"),"."),Object(o.b)("h3",{id:"watch-a-running-workflow"},"Watch a running workflow"),Object(o.b)("p",null,"You can watch the logs of a running workflow \ud83d\udc40"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s watch csv-virtuoso.cwl-cohd-20200215-100352.txt\n")),Object(o.b)("h3",{id:"display-workflow-logs"},"Display workflow logs"),Object(o.b)("p",null,"Display the complete logs of any workflow previously run \ud83d\udccb"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s log csv-virtuoso.cwl-cohd-20200215-091342.txt\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"run-attached-to-the-terminal"},"Run attached to the terminal"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-shell"}),"d2s run csv-virtuoso.cwl cohd --watch\n")),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"\u26a0\ufe0f The logs will not be stored in ",Object(o.b)("inlineCode",{parentName:"p"},"workspace/logs"),".")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"further-details-on-sparql-mappings"},"Further details on SPARQL mappings"),Object(o.b)("p",null,"Converting data with Data2Services relies on 3 steps:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A ",Object(o.b)("strong",{parentName:"li"},"generic RDF")," is automatically ",Object(o.b)("strong",{parentName:"li"},"generated")," from the input data structure."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.w3.org/TR/sparql11-query/"}),"SPARQL")," queries are designed by the user to ",Object(o.b)("strong",{parentName:"li"},"map")," the generic RDF ",Object(o.b)("strong",{parentName:"li"},"to a target model"),". "),Object(o.b)("li",{parentName:"ul"},"Extra modules can be added to the workflow to perform operations SPARQL doesn't natively support ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"E.g. splitting statements, resolving the preferred URI for an entity.")))),Object(o.b)("p",null,"You can find example of SPARQL mapping queries for:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"XML")," files",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/drugbank/mappings"}),"DrugBank")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"CSV/TSV")," files",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/datasets/cohd/mappings"}),"COHD clinical data")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/stitch/mappings/insert-stitch.rq"}),"Stitch")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/datasets/eggnog/mappings/insert-eggnog.rq"}),"EggNOG"))))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Defining the mappings is the hardest and most cumbersome part of data integration. We are working actively on making it easier, by working on mapping automation and graphical user interfaces.")),Object(o.b)("p",null,"The mapping definition is ",Object(o.b)("strong",{parentName:"p"},"straightforward for flat data format")," such as CSV, TSV or relational databases. But ",Object(o.b)("strong",{parentName:"p"},"nested data representation")," such as XML or JSON require more ",Object(o.b)("strong",{parentName:"p"},"complex mappings"),"."),Object(o.b)("p",null,"If you are mapping a dataset for the first time we advice you to run ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/AutoR2RML"}),"AutoR2RML")," or ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/xml2rdf"}),"xml2rdf")," on the data to generate bootstrap SPARQL queries"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/MaastrichtU-IDS/AutoR2RML"}),"AutoR2RML")," automatically generates a SPARQL query extracting all columns value for each row. ",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"You just need to generate proper URIs using ",Object(o.b)("inlineCode",{parentName:"li"},"BIND")),Object(o.b)("li",{parentName:"ul"},"And write the statements corresponding to the target representation")))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/blob/master/mapping/pharmgkb/transform/1/insert-pharmgkb.rq"}),"PharmGKB")," is a good example of complex TSV file.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/xml2rdf"}),"xml2rdf")," generates a SPARQL mapping file for each array it detects"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Mapping generation for XML is still experimental as it is complex to detect which fields should be mapped.")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Be careful when iterating on multiple different child arrays for a parent node in your SPARQL query. It can blow up the processing time. "),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Always split your queries to never iterate over more than one array for a parent node."),Object(o.b)("li",{parentName:"ul"},"E.g. if ",Object(o.b)("inlineCode",{parentName:"li"},"drug:001")," from a XML file has multiple ",Object(o.b)("inlineCode",{parentName:"li"},"publications")," and multiple ",Object(o.b)("inlineCode",{parentName:"li"},"synonyms")," nodes in its child, then it is preferable to get them in 2 different queries. Retrieving the 2 arrays in a single query would results in the returned row count be a cartesian product of the 2 arrays, which grows exponentially with the size of each array."),Object(o.b)("li",{parentName:"ul"},"Final semantic results are the same, but the performance of the transformation is highly impacted.")))))),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/MaastrichtU-IDS/d2s-project-template/tree/master/mapping/drugbank/transform/1"}),"DrugBank")," is a good example of multiple mappings files to handle arrays.")))}b.isMDXComponent=!0}}]);